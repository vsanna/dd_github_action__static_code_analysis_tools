/*
plugin = propertyとtaskを生やす
* */


plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'


    // static code analysis
    id 'checkstyle'
    id 'com.github.spotbugs' version '2.0.0'
    id 'pmd'
//    id 'net.ltgt.errorprone' version '1.1.1'

    // owasp check: https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/index.html
    id "org.owasp.dependencycheck" version "5.2.4"
}

checkstyle {
    toolVersion '8.27'
    configFile = file("rulesets/checkstyle/checkstyle-rules.xml")
    ignoreFailures = true
}

pmd {
    toolVersion '6.10.0'
    ruleSetConfig = resources.text.fromFile("rulesets/pmd/pmd-rules.xml")
    ignoreFailures = true
}

spotbugs {
    toolVersion '4.0.0-beta4'
    ignoreFailures = true
    effort = 'max'
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    ignoreFailures = true // buildを失敗扱いしない
    effort = 'max'
    reportLevel = 'high' // 'low'
    // excludeFilter
//    includeFilter = file('rulesets/spotbugs/spotbugs-rules.xml')
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

group = 'dev.ishikawa.sca'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
description = "sample app to compare static code analysis tools"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    ext {
        tomcatJdbcVersion = '9.0.17'
        jedisVersion = '2.9.3'
        mybatisVersion = '3.5.0'
        mybatisSpringVersion = '2.0.1'
        mysqlConnectorVersion = '8.0.11'
        errorproneVersion = '2.3.4'
    }

//    errorprone("com.google.errorprone:error_prone_core:${errorproneVersion}")
    // to support JDK8
//    errorproneJavac("com.google.errorprone:javac:9+181-r4173-1")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // application -> JPA ->
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // this is included in spring-boot-starter-data-jpa
    // implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    implementation 'org.apache.kafka:kafka-streams'
    implementation("org.apache.tomcat:tomcat-jdbc:${tomcatJdbcVersion}")
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.1'
    implementation 'org.springframework.kafka:spring-kafka'

    // redis
    // compile ('org.springframework.boot:spring-boot-starter-redis:1.4.7.RELEASE')
    implementation('org.springframework.boot:spring-boot-starter-data-redis')
    // implementation('org.springframework.data:spring-data-redis')
    // implementation("redis.clients:jedis:${jedisVersion}")

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation("javax.xml.bind:jaxb-api:2.4.0-b180830.0359")
    implementation("com.sun.xml.bind:jaxb-impl:2.4.0-b180830.0438")
    implementation("com.sun.xml.bind:jaxb-core:2.3.0")
    implementation("com.sun.activation:javax.activation:1.2.0")
//    compile("javax.validation.validation-api:2.0.1.Final") // TODO: ymmでなぜ入っているのか
//    compile group: 'javax.validation', name: 'validation-api', version: '2.0.1.GA'

    // gson
    implementation('com.google.code.gson:gson')

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'

//    implementation("org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisSpringVersion}")


    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.kafka:spring-kafka-test'
}

test {
    useJUnitPlatform()
}

task display {
    doFirst {
        println "project: $project.name"
        println "project.description: $project.description"
    }
}